# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
stages:
  - build
  - deploy

default:
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY


docker-build:
  stage: build
  tags:
    - vm2
    - build
    - dind
  image: docker:cli
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  after_script:
    - echo "DOCKER_IMAGE_NAME $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - echo "CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE"
    - echo "CI_REGISTRY $CI_REGISTRY"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy-to-prod:
  stage: deploy
  tags:
    - vm2
    - shell
    - prod
  environment:
    name: prod
    url: https://wave.01110110.ru
  script:
    - cd /production/lampovi/wave
    - echo "Current dir is $(pwd)"
    - docker pull $CI_REGISTRY_IMAGE
    - docker compose down $CI_PROJECT_NAME
    - docker compose up -d $CI_PROJECT_NAME
    - docker image prune -f
  only:
    - main